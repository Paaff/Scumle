<RibbonWindow x:Class="Scumle.View.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:local="clr-namespace:Scumle.View"
              xmlns:Control="clr-namespace:Scumle.View.UserControls"
              xmlns:gala="http://www.galasoft.ch/mvvmlight"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:Model="clr-namespace:Scumle.Model"
              xmlns:Tools="clr-namespace:Scumle.Tools"
              xmlns:View="clr-namespace:Scumle.View"
              xmlns:Preview="clr-namespace:Scumle.View.Preview"
              xmlns:Drag="clr-namespace:Scumle.View.UserControls"
              Title="Scumle UML Editor"
              Height="1000"
              Width="1700"
              Icon="/Images/scumle.ico"
              WindowStartupLocation="CenterScreen">


    <Window.InputBindings >
        <KeyBinding Key="Delete" Command="{Binding DeleteSelectedShapesCommand}"></KeyBinding>
        <KeyBinding Modifiers="Ctrl" Key="O"  Command="{Binding OpenWorkSpaceCommand}"></KeyBinding>
        <KeyBinding Modifiers="Ctrl" Key="S"  Command="{Binding SaveWorkSpaceCommand}"></KeyBinding>
        <KeyBinding Modifiers="Ctrl" Key="N"  Command="{Binding NewWorkSpaceCommand}"></KeyBinding>
        <KeyBinding Modifiers="Ctrl" Key="A"  Command="{Binding SelectAllCommand}"></KeyBinding>
        <KeyBinding Gesture="CTRL+Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Gesture="CTRL+Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Gesture="CTRL+C" Command="{Binding CopyCommand}"/>
        <KeyBinding Gesture="CTRL+X" Command="{Binding CutCommand}"/>
        <KeyBinding Gesture="CTRL+V" Command="{Binding PasteCommand}"/>
        <KeyBinding Gesture="Escape" Command="{Binding EscCommand}"/>
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <gala:EventToCommand Command="{Binding WindowExitCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <Tools:LineTemplateSelector x:Key="LineTemplateSelector"/>
            <Tools:ShapeTemplateSelector x:Key="ShapeTemplateSelector"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/ShapesDictionary.xaml"/>
                <ResourceDictionary Source="Resources/LinesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="PreviewMouseMove">
                <gala:EventToCommand Command="{Binding MouseMoveDragCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Canvas Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="3" Panel.ZIndex="100" IsHitTestVisible="False">
            <ContentControl Content="{Binding DragElement}" Canvas.Left="{Binding DragElement.X}" Canvas.Top="{Binding DragElement.Y}">
                <ContentControl.ContentTemplate>
                <DataTemplate>
                    <Drag:ShapeUserControl></Drag:ShapeUserControl>
                </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>
            <i:Interaction.Triggers>
                <!--
                <i:EventTrigger EventName="PreviewMouseWheel">
                    <gala:EventToCommand Command="{Binding ZoomCommand}" PassEventArgsToCommand="True"></gala:EventToCommand>
                </i:EventTrigger>
                -->
            </i:Interaction.Triggers>
        </Canvas>

        <local:Ribbon Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"/>

        <Border  DockPanel.Dock="Bottom" BorderThickness="0,1,0,0" BorderBrush="Black" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid>
                <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" Text="{Binding StatusText, NotifyOnTargetUpdated=True}">
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:4" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
                <Label Content="{Binding Version}" Height="25" HorizontalAlignment="Right"></Label>
            </Grid>
        </Border>
        <Control:SideMenuUserControl DockPanel.Dock="Left" Width="225" Grid.Row="1" Grid.Column="0"></Control:SideMenuUserControl>

        <Control:DiagramUserControl x:Name="Print" Grid.Row="1" Grid.Column="1"></Control:DiagramUserControl>
    </Grid>

</RibbonWindow> 